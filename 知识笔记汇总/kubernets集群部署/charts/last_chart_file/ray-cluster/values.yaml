image:
  repository: iregistry.baidu-int.com/themis-public/ray
  tag: 2.3.0-py39-cv2-tritonv2-20250109
  pullPolicy: IfNotPresent
nameOverride: "kuberay"
fullnameOverride: ""
imagePullSecrets: []
# - name: an-existing-secret

head:
  groupName: headgroup
  replicas: 1
  type: head
  labels:
    key: value
  initArgs:
    port: '6379'
    redis-password: 'LetMeInRay' # Deprecated since Ray 1.11 due to GCS bootstrapping enabled
    dashboard-host: '0.0.0.0'
    node-ip-address: $MY_POD_IP # auto-completed as the head pod IP
    block: 'true'
  containerEnv:
    - name: TZ
      value: "Asia/Shanghai"
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    - name: ENDPOINT_INFERENCE_WORKER_NUM_V2
      value: "3"
    - name: INFERENCE_SOURCE_QUEUE_MAX_SIZE
      value: "20000"
  envFrom: []
  # - secretRef:
  #     name: my-env-secret
  resources:
    limits:
      cpu: 64
      memory: 256Gi
    requests:
      cpu: 32
      memory: 128Gi
  livenessProbe:
    failureThreshold: 3
    exec:
      command:
        - /bin/sh
        - -c
        - |
          if [ $(( $(date +%s) % 86400 )) -eq 0 ]; then
            exit 1
          fi

          wget --spider --timeout=10 --tries=1 http://localhost:8265/api/version || exit 1
    initialDelaySeconds: 5
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 10
  readinessProbe:
    failureThreshold: 3
    httpGet:
      path: /api/version
      port: 8265
      scheme: HTTP
    initialDelaySeconds: 5
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 10
  annotations: {}
  nodeSelector:
    raycluster: enable
  tolerations: []
  affinity: {}
  volumes:
    - name: log-volume
      emptyDir: {}
    - name: fluentbit-config
      configMap:
        name: fluentbit-config
    - name: gluster-result-volume-claim
      persistentVolumeClaim:
        claimName: gluster-result-volume-claim
    - hostPath:
        path: /home/ray/input
        type: DirectoryOrCreate
      name: rayinput
  volumeMounts:
    - mountPath: /tmp/ray
      name: log-volume
    - mountPath: /home/ray/output
      mountPropagation: HostToContainer
      name: gluster-result-volume-claim
    - mountPath: /home/ray/input
      mountPropagation: HostToContainer
      name: rayinput
worker:
  # If you want to disable the default workergroup
  # uncomment the line below
  # disabled: true
  groupName: workergroup
  replicas: 0
  type: worker
  labels:
    key: value
  initArgs:
    node-ip-address: $MY_POD_IP
    redis-password: LetMeInRay
    block: 'true'
  containerEnv:
    - name: ENDPOINT_INFERENCE_WORKER_NUM_V2
      value: "3"
    - name: INFERENCE_SOURCE_QUEUE_MAX_SIZE
      value: "20000"
    - name: TZ
      value: "Asia/Shanghai"
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    - name: RAY_DISABLE_DOCKER_CPU_WARNING
      value: "1"
    - name: CPU_REQUEST
      valueFrom:
        resourceFieldRef:
          containerName: ray-worker
          resource: requests.cpu
    - name: MY_POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
  envFrom: []
  # - secretRef:
  #     name: my-env-secret
  ports:
    - containerPort: 80
      protocol: TCP
  resources:
    limits:
      cpu: 64
      memory: 256Gi
    requests:
      cpu: 32
      memory: 128Gi
  annotations:
    key: value
  nodeSelector:
    raycluster: enable
  tolerations: []
  affinity: {}
  volumes:
    - name: log-volume
      emptyDir: {}
    - name: gluster-result-volume-claim
      persistentVolumeClaim:
        claimName: gluster-result-volume-claim
    - hostPath:
        path: /home/ray/input
        type: Directory
      name: rayinput
  volumeMounts:
    - mountPath: /tmp/ray
      name: log-volume
    - mountPath: /home/ray/output
      mountPropagation: HostToContainer
      name: gluster-result-volume-claim
    - mountPath: /home/ray/input
      mountPropagation: HostToContainer
      name: rayinput
# The map's key is used as the groupName.
# For example, key:small-group in the map below
# will be used as the groupName
additionalWorkerGroups:
  small-group:
    # Disabled by default
    disabled: true
    replicas: 1
    miniReplicas: 1
    maxiReplicas: 3
    type: worker
    labels: {}
    initArgs:
      node-ip-address: $MY_POD_IP
      redis-password: LetMeInRay
      block: 'true'
    containerEnv:
      - name: ENDPOINT_INFERENCE_WORKER_NUM_V2
        value: "3"
      - name: INFERENCE_SOURCE_QUEUE_MAX_SIZE
        value: "20000"
      - name: TZ
        value: "Asia/Shanghai"
      - name: MY_POD_IP
        valueFrom:
          fieldRef:
            fieldPath: status.podIP
      - name: RAY_DISABLE_DOCKER_CPU_WARNING
        value: "1"
      - name: CPU_REQUEST
        valueFrom:
          resourceFieldRef:
            containerName: ray-worker
            resource: requests.cpu
      - name: MY_POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
    envFrom: []
    # - secretRef:
    #     name: my-env-secret
    ports:
      - containerPort: 80
        protocol: TCP
    resources:
      limits:
        cpu: 64
        memory: 256Gi
      requests:
        cpu: 32
        memory: 128Gi
    annotations:
      key: value
    nodeSelector:
      raycluster: enable
    tolerations: []
    affinity: {}
    volumes:
      - name: log-volume
        emptyDir: {}
      - name: gluster-result-volume-claim
        persistentVolumeClaim:
          claimName: gluster-result-volume-claim
      - hostPath:
          path: /home/ray/input
          type: Directory
        name: rayinput
    volumeMounts:
      - mountPath: /tmp/ray
        name: log-volume
      - mountPath: /home/ray/output
        mountPropagation: HostToContainer
        name: gluster-result-volume-claim
      - mountPath: /home/ray/input
        mountPropagation: HostToContainer
        name: rayinput
headServiceSuffix: "ray-operator.svc"
service:
  type: ClusterIP
  port: 8080
